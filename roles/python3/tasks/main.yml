---
# tasks file for deploy ssh pub key

- name: Installing python 3.x
  become: yes
  apt:
    pkg:
      - python3
      - python3-venv
      - python3-pip
      - nginx
      - libpcre3 
      - libpcre3-dev
    state: latest
    update_cache: true

- name: creat dir
  become: yes
  file:
    path: '{{ item }}'
    recurse: yes
    owner: 'ubuntu'
    mode: 0755
    state: directory
  loop:
   - '/opt/apps'
   - '{{ env }}'
   - '{{ project_dir }}'
   - '{{ project_dir }}/logs'
   - '/var/log/uwsgi'

- name: copy file project
  become: yes
  copy: src={{ item }} dest={{ project_dir }} owner=ubuntu group=ubuntu mode=0644
  with_items:
   - 'app.py'
   - 'config.py'
   - 'requirements.txt'

- name: copy apps ini param
  become: yes
  template: src=apps.ini.j2 dest={{ project_dir }}/apps.ini owner=ubuntu group=ubuntu mode=0644
  tags: test2

- name: touch log file in /var/log/uwsgi
  become: yes
  file: path=/var/log/uwsgi/apps.log state=touch owner=ubuntu group=ubuntu mode=0644
  tags: test3

- name: touch file .pam_environment in ~/
  file: path=~/.pam_environment state=touch 

- name: populate ~/.pam_environment
  lineinfile:
    path: ~/.pam_environment
    state: present
    regexp: '^{{ item.key }}='
    line: '{{ item.key }}={{ item.value}}'
  with_items: '{{ os_environment }}'
  
- name: create virtualenv
  become: yes
  pip: requirements={{ project_dir }}/{{ requirements }} virtualenv={{ env }} virtualenv_command='python3 -m venv'

- name: install a django
  pip:
    name: 
      - uwsgi
      - flask
    virtualenv: "{{ env }}"
    virtualenv_command: 'source {{ project_dir }}/bin/activate'

- name: copy apps ini param
  become: yes
  template: src=app.service.j2 dest=/etc/systemd/system/app.service owner=root group=root mode=644
  tags: test2

- name: Make sure a service is running
  become: yes
  systemd:
    state: started
    name: app
    enabled: yes
  tags: test2
    